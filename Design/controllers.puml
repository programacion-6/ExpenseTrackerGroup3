@startuml controllers

package "controllers" {
    abstract class BaseController extends ControllerBase {
        # ActionResult HandleException(Exception ex)
    }

    class UserController extends BaseController {
        - IUserService _userService
        + UserController(IUserService userService)
        + Task<ActionResult> GetProfile(Guid userId)
        + Task<ActionResult> UpdateProfile(Guid userId, CreateUser user)
        + Task<ActionResult> RegisterUser(CreateUser user)
        + Task<ActionResult> ResetPassword(string email)
    }

    class IncomeController extends BaseController {
        - IIncomeService _incomeService
        + IncomeController(IIncomeService incomeService)
        + Task<ActionResult> AddIncome(Guid userId, CreateIncome income)
        + Task<ActionResult> GetUserIncomes(Guid userId)
        + Task<ActionResult> GetMonthlyIncome(Guid userId, DateTime month)
    }

    class ExpenseController extends BaseController {
        - IExpenseService expenseService
        + ExpenseController(IExpenseService expenseService)
        + Task<ActionResult> AddExpense(Guid userId, CreateExpense expense)
        + Task<ActionResult> GetHighestExpenseCategory(Guid userId, string category)
        + Task<ActionResult> GetMostExpensiveMonth(Guid userId, DateTime month)
        + Task<ActionResult> CheckRecurringExpense(Guid userId)
    }

    class BudgetController extends BaseController {
        - IBudgetService budgetService
        + BudgetController(IBudgetService budgetService)
        + Task<ActionResult> AddBudget(Guid userId, CreateBudget budget)
        + Task<ActionResult> UpdateBudget(Guid userId, CreateBudget budget)
        + Task<ActionResult> GetMonthlyBudget(Guid id, DateTime month)
    }

    class GoalController extends BaseController {
        - IGoalService goalService
        + GoalController(IGoalService goalService)
        + Task<ActionResult> AddGoal(Guid userId, CreateGoal goal)
        + Task<ActionResult> UpdateGoal(Guid userId, CreateGoal goal)
        + Task<ActionResult> GetActiveGoals(Guid userId)
        + Task<ActionResult> GetGoalProgress(Guid goalId)
        + Task<ActionResult> UpdateGoalProgress(Guid goalId, CreateGoal goal)
    }
}

@enduml