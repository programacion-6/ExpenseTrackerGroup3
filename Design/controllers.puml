@startuml controllers

package "controllers" {
    class UserController {
        - IUserService _userService
        + UserController(IUserService userService)
        + Task<IActionResult> UpdateProfile(Guid userId, CreateUser user)
        + Task<IActionResult> GetUserProfile(Guid userId)
    }

    class ExpenseController {
        - IExpenseService _expenseService
        + ExpenseController(IExpenseService expenseService)
        + Task<IActionResult> AddExpense (Guid userId, CreateExpense expense)
        + Task<IActionResult> GetUserExpenses(Guid userId)
        + Task<IActionResult> GetHighestSpendingCategory(Guid userId, string category)
        + Task<IActionResult> GetMostExpensiveMonth(Guid userId, DateTime month)
        + Task<IActionResult> CheckRecurringExpense(Guid userId)
        + Task<IActionResult> UpdateExpense(Guid expenseId, CreateExpense expense)
        + Task<IActionResult> DeleteExpense(Guid expenseId)
    }

    class IncomeController {
        - IIncomeService _incomeService
        + IncomeController(IIncomeService incomeService)
        + Task<IActionResult> AddIncome(Guid userId, CreateIncome income)
        + Task<IActionResult> GetUserIncomes(Guid userId)
        + Task<IActionResult> GetMonthlyIncome(Guid userId, DateTime month)
        + Task<IActionResult> UpdateIncome(Guid incomeId, CreateIncome income)
        + Task<IActionResult> DeleteIncome(Guid incomeId)
        + Task<IActionResult> GetIncomeById(Guid incomeId)
    }

    class BudgetController {
        - IBudgetService _budgetService
        + BudgetController(IBudgetService budgetService)
        + Task<IActionResult> AddBudget(Guid userId, CreateBudget budget)
        + Task<IActionResult> GetBudgetUserByMonth(Guid userId, DateTime month)
        + Task<IActionResult> UpdateBudget(Guid budgetId, CreateBudget budget)
        + Task<IActionResult> DeleteBudget(Guid budgetId)
        + Task<IActionResult> CheckBudgetStatus(Guid userId, DateTime month)
    }

    class GoalController {
        - IGoalService _goalService
        + GoalController(IGoalService goalService)
        + Task<IActionResult> CreateGoal(Guid userId, CreateGoal goal)
        + Task<IActionResult> GetGoals(Guid userId)
        + Task<IActionResult> GetActiveGoals(Guid userId)
        + Task<IActionResult> GetGoalById(Guid goalId)
        + Task<IActionResult> TrackGoalProgress(Guid userId, Guid goalId, decimal amount)
        + Task<IActionResult> UpdateGoal(Guid goalId, CreateGoal goal)
        + Task<IActionResult> DeleteGoal(Guid goalId)
    }

    class AuthController {
        - IAuthService _ authService
        + AuthController(IAuthService authService)
        + Task<IActionResult> RegisterUser(CreateUser user)
        + Task<IActionResult> LoginUser(string email, string password)
        + Task<IActionResult> RequestPasswordReset(string email)
        + Task<IActionResult> ResetPassword(string token, string newPassword)
    }

    UserController --> IUserService
    ExpenseController --> IExpenseService
    IncomeController --> IIncomeService
    BudgetController --> IBudgetService
    GoalController --> IGoalService
    AuthController --> IAuthService
}

@enduml