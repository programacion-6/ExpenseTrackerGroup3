@startuml repositories

package "repositories" {
    interface IRepository<T> {
        + Task<T> GetByIdAsync(Guid id)
        + Task<List<T>> GetAllAsync()
        + Task<T> AddAsync(T item)
        + Task<T> UpdateAsync(T item)
        + Task DeleteAsync(Guid id)
    }

    class UserRepository implements IRepository<User> {
        - IUserRepository _userRepository
        + Task<User> GetByIdAsync(Guid id)
        + Task<List<User>> GetAllAsync()
        + Task<User> AddAsync(User item)
        + Task<User> UpdateAsync(User item)
        + Task DeleteAsync(Guid id)
    }

    class ExpenseRepository implements IRepository<Expense> {
        - IExpenseRepository _expenseRepository
        + Task<Expense> GetByIdAsync(Guid id)
        + Task<List<Expense>> GetAllAsync()
        + Task<Expense> AddAsync(Expense item)
        + Task<Expense> UpdateAsync(Expense item)
        + Task DeleteAsync(Guid id)
    }

    class IncomeRepository implements IRepository<Income> {
        - IIncomeRepository _incomeRepository
        + Task<Income> GetByIdAsync(Guid id)
        + Task<List<Income>> GetAllAsync()
        + Task<Income> AddAsync(Income item)
        + Task<Income> UpdateAsync(Income item)
        + Task DeleteAsync(Guid id)
    }

    class BudgetRepository implements IRepository<Budget> {
        - IBudgetRepository _budgetRepository
        + Task<Budget> GetByIdAsync(Guid id)
        + Task<List<Budget>> GetAllAsync()
        + Task<Budget> AddAsync(Budget item)
        + Task<Budget> UpdateAsync(Budget item)
        + Task DeleteAsync(Guid id)
    }

    class GoalRepository implements IRepository<Goal> {
        - IGoalRepository _goalRepository
        + Task<Goal> GetByIdAsync(Guid id)
        + Task<List<Goal>> GetAllAsync()
        + Task<Goal> AddAsync(Goal item)
        + Task<Goal> UpdateAsync(Goal item)
        + Task DeleteAsync(Guid id)
    }

    UserRepository --> DbConnection
    ExpenseRepository --> DbConnection
    IncomeRepository --> DbConnection
    BudgetRepository --> DbConnection
    GoalRepository --> DbConnection
}

@enduml