@startuml
package "Validators.Rules" {
    class BudgetRules {
        + Amount<T>(ruleBuilder: IRuleBuilder<T, decimal>): IRuleBuilderOptions<T, decimal>
        + AlertThreshold<T>(ruleBuilder: IRuleBuilder<T, decimal>): IRuleBuilderOptions<T, decimal>
    }

    class ExpenseRules {
        + Description<T>(ruleBuilder: IRuleBuilder<T, string?>): IRuleBuilderOptions<T, string?>
        + Category<T>(ruleBuilder: IRuleBuilder<T, string>): IRuleBuilderOptions<T, string>
        + Date<T>(ruleBuilder: IRuleBuilder<T, DateTime>): IRuleBuilderOptions<T, DateTime>
        + RecurringExpense<T>(ruleBuilder: IRuleBuilder<T, Boolean>): IRuleBuilderOptions<T, Boolean>
    }

    class GoalRules {
        + DeadLine<T>(ruleBuilder: IRuleBuilder<T, DateTime>): IRuleBuilderOptions<T, DateTime>
        + CurrentAmount<T>(ruleBuilder: IRuleBuilder<T, decimal>): IRuleBuilderOptions<T, decimal>
    }

    class IncomeRules {
        + Source<T>(ruleBuilder: IRuleBuilder<T, string?>): IRuleBuilderOptions<T, string?>
    }

    class UserRules {
        + Email<T>(ruleBuilder: IRuleBuilder<T, string>): IRuleBuilderOptions<T, string>
        + Username<T>(ruleBuilder: IRuleBuilder<T, string>): IRuleBuilderOptions<T, string>
        + Password<T>(ruleBuilder: IRuleBuilder<T, string>): IRuleBuilderOptions<T, string>
    }
}

package "Validators.BudgetValidator" {
    class BudgetValidator {
        + BudgetValidator()
    }

    class MonthValidator {
        + MonthValidator()
    }
}

package "Validators.ExpenseValidator" {
    class ExpenseValidator {
        + ExpenseValidator()
    }

    class CategoryValidator {
        + CategoryValidator()
    }
}

package "Validators.GoalValidator" {
    class GoalValidator {
        + GoalValidator()
    }

    class AmountValidator {
        + AmountValidator()
    }
}

package "Validators.IncomeValidator" {
    class IncomeValidator {
        + IncomeValidator()
    }

    class MonthValidator {
        + MonthValidator()
    }
    
    class UpdateValidator {
	+ UpdateValidator()
    }
}

package "Validators.UserValidator" {
    class UserValidator {
        + UserValidator()
    }
}

package "Validators.AuthValidator" {
    class EmailValidator {
        + EmailValidator()
    }

    class LoginValidator {
        + LoginValidator()
    }

    class PasswordValidator {
        + PasswordValidator()
    }

    class RegisterValidator {
        + RegisterValidator()
    }
}

Validators.BudgetValidator --> BudgetRules : uses

Validators.ExpenseValidator --> ExpenseRules : uses

Validators.GoalValidator --> GoalRules : uses 

Validators.IncomeValidator --> IncomeRules : uses

Validators.UserValidator --> UserRules : uses 

Validators.AuthValidator --> UserRules : uses


@enduml